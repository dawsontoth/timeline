{"version":3,"sources":["components/clock.tsx","components/items.ts","components/controls.tsx","components/item.tsx","components/timeline.tsx","App.tsx","index.tsx"],"names":["Clock","useState","time","setTime","useEffect","timer","setInterval","now","Date","toLocaleTimeString","clearInterval","className","hitGoLive","hitOutro","Controls","onClick","window","location","reload","Item","item","delta","setDelta","completed","setCompleted","complete","useCallback","nowCompleted","completedAt","undefined","tick","atMinutes","atDate","getFullYear","getMonth","getDate","getHours","getTime","atMinutesToDiff","afterMinutes","relativeTo","dangerouslySetInnerHTML","__html","message","formatMilliseconds","ms","sign","Math","abs","frames","String","floor","padStart","seconds","minutes","items","forEach","Timeline","map","index","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e3b56e8.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./clock.scss\";\n\nexport function Clock() {\n  const [time, setTime] = useState(\"\");\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const now = new Date();\n      setTime(now.toLocaleTimeString());\n    }, 1000 / 60);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <div className=\"clock\">\n      { time }\n    </div>\n  );\n}\n","export interface IItem {\n  message: string;\n  atMinutes?: number;\n  afterMinutes?: number;\n\n  completed?: boolean;\n  completedAt?: number;\n\n  tick?: () => void;\n  relativeTo?: IItem;\n}\n\n// TODO: Observe Livestream Studio through remote API\n// TODO: Control Livestream Studio through remote API\n\nlet hitGoLive: IItem;\nlet hitOutro: IItem;\n\nexport const items: IItem[] = [\n  // TODO: Add pictures of actions.\n  // TODO: Load all this from a series of files so it's easy to maintain.\n  // Without minutes, these happen whenever.\n  { message: \"Open Livestream Studio.\" },\n  { message: \"Double tap <strong>Black</strong> source to output.\" },\n  { message: \"Push <strong>GFX 2</strong> and verify the logo is displaying.\" },\n  { message: \"Set title for this week in 2 places, and time of next service, then hit <strong>Update</strong> button.\" },\n  { message: \"Make sure <strong>Names</strong> tab is ready for whomever is speaking today.\" },\n  // They will anchor future items based on their completion time.\n  // Absolute minutes, not relative.\n  hitGoLive = { atMinutes: 50, message: \"Hit <strong>GO LIVE</strong> button in top left.\" },\n  // Relative minutes, look for prior fixed point.\n  { relativeTo: hitGoLive, afterMinutes: 0, message: \"Double tap <strong>Intro</strong> source to output.\" },\n  { relativeTo: hitGoLive, afterMinutes: 0, message: \"Single tap <strong>Cameras</strong> source to preview.\" },\n  { relativeTo: hitGoLive, afterMinutes: 0, message: \"Check that the stream started OK on Vimeo, YT and FB.\" },\n  { relativeTo: hitGoLive, afterMinutes: 5, message: \"When countdown begins, double tap <strong>Cameras</strong> to output.\" },\n  { relativeTo: hitGoLive, afterMinutes: 10, message: \"Have fun! Mistakes happen, just roll with it.\" },\n  hitOutro = { message: \"When dismissed, double tap on <strong>Outro</strong> source to output.\" },\n  // When above isn't completed, our fixed point is undefined, so no countdown should show.\n  { relativeTo: hitOutro, afterMinutes: 0, message: \"Single tap on <strong>BLACK</strong> source to preview.\" },\n  {\n    relativeTo: hitOutro,\n    afterMinutes: 0,\n    message: \"After in-person ends, ensure <strong>Projector</strong> is going out to the building.\",\n  },\n  {\n    relativeTo: hitOutro,\n    afterMinutes: 10,\n    message: \"When the timer hits 0, stop streaming by tapping red <strong>STREAMING</strong> button.\",\n  },\n];\n\nitems.forEach(item => {\n  item.completed = false;\n});\n","import React from \"react\";\nimport \"./controls.scss\";\n\nexport function Controls() {\n  return (\n    <div className=\"controls\" onClick={ () => window.location.reload() }>\n      <button>Reset</button>\n    </div>\n  );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { IItem } from \"./items\";\n\nexport function Item({ item }: { item: IItem }) {\n  const [delta, setDelta] = useState<number | null>(null);\n  const [completed, setCompleted] = useState(false);\n\n  const complete = useCallback(() => {\n    const nowCompleted = !completed;\n    setCompleted(nowCompleted);\n    item.completedAt = nowCompleted ? Date.now() : undefined;\n    item.completed = nowCompleted;\n  }, [item, completed, setCompleted]);\n\n  useEffect(() => {\n    item.tick = () => {\n      if (item.completed) {\n        return setDelta(null);\n      }\n      if (item.atMinutes) {\n        return setDelta(atMinutesToDiff(item.atMinutes));\n      }\n      if (item.afterMinutes !== undefined && item.relativeTo?.completed) {\n        // if (item.relativeTo.atMinutes) {\n        //   return setDelta(atMinutesToDiff(item.relativeTo.atMinutes - item.afterMinutes));\n        // }\n        if (item.relativeTo.completedAt) {\n          return setDelta(Date.now() - item.relativeTo.completedAt - item.afterMinutes * 60 * 1000);\n        }\n      }\n      return setDelta(null);\n    };\n  }, [item, setDelta]);\n\n  return (\n    <li\n      className={ \"item\"\n      + (delta !== null && delta > 0 ? \" late\" : \"\")\n      + (completed ? \" completed\" : \"\")\n      }\n      onClick={ complete }\n    >\n      <i className={ \"item-status fal fa-\" + (completed ? \"check-\" : \"\") + \"circle\" } />\n      <div className=\"message\"\n           dangerouslySetInnerHTML={ { __html: item.message } } />\n      <div className=\"delta\">\n        { formatMilliseconds(delta) }\n      </div>\n    </li>\n  );\n}\n\nfunction atMinutesToDiff(atMinutes: number): number {\n  const now = new Date();\n  const atDate = new Date(now.getFullYear(), now.getMonth(), now.getDate(), now.getHours(), atMinutes, 0, 0);\n  return now.getTime() - atDate.getTime();\n}\n\nfunction formatMilliseconds(ms: null | number): string | undefined {\n  if (ms === null) {\n    return undefined;\n  }\n  const sign = ms < 0 ? \"T-\" : \"T+\";\n  ms = Math.abs(ms);\n  const frames = String(Math.floor((ms % 1000) / (1000 / 30))).padStart(2, \"0\");\n  const seconds = String(Math.floor((ms / 1000) % 60)).padStart(2, \"0\");\n  const minutes = String(Math.floor((ms / 1000 / 60) % 60)).padStart(2, \"0\");\n  return `${ sign }${ minutes }:${ seconds }:${ frames }`;\n}\n","import React, { useEffect } from \"react\";\nimport { Item } from \"./item\";\nimport { items } from \"./items\";\nimport \"./timeline.scss\";\n\nexport function Timeline() {\n  useEffect(() => {\n    const timer = setInterval(() => {\n      items.forEach(item => {\n        item.tick?.();\n      });\n    }, 1000 / 60);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <ul className=\"timeline\">\n      { items.map((item, index) => (\n        <Item item={ item } key={ index } />\n      )) }\n    </ul>\n  );\n}\n","import React from \"react\";\nimport { Clock } from \"./components/clock\";\nimport { Controls } from \"./components/controls\";\nimport { Timeline } from \"./components/timeline\";\n\nexport function App() {\n  return (\n    <div className=\"App\">\n      <Clock />\n      <Controls />\n      <Timeline />\n    </div>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}